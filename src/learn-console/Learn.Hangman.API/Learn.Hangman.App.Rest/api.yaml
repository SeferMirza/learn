openapi: 3.0.1
info:
  title: Swagger Hangmen
  description: This is the swagger design of the hangman project's word repository API.
  termsOfService: https://github.com/SeferMirza/learn/tree/master/src/learn-console/
  contact:
    email: sefermirza@gmail.com
  version: 1.0.0
servers:
  - url: https://localhost:44330/
tags:
  - name: word
    description: Hangman words database
paths:
  /words:
    get:
      tags:
        - word
      summary: Returns random word in the database.
      description: Returns word in the database.
      parameters:
        - name: level
          in: query
          description: Word level.
          schema:
            type: integer
        - name: per-page
          in: query
          description: Return word counts.
          schema:
            type: integer
        - name: random
          in: query
          description: Return random or sequential word.
          schema:
            type: boolean
      responses:
        '200':
          description: succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/out-word'
            application/xml:
              schema:
                $ref: '#/components/schemas/out-word'
        '400':
          description: Invalid word supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
            application/xml:
              schema:
                $ref: '#/components/schemas/400'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
            application/xml:
              schema:
                $ref: '#/components/schemas/404'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
            application/xml:
              schema:
                $ref: '#/components/schemas/405'
    post:
      tags:
        - word
      summary: Adds a word in the database.
      description: Adds a word in the database
      requestBody:
        description: Add new word
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/in-word'
          application/xml:
            schema:
              $ref: '#/components/schemas/in-word'
        required: true
      responses:
        '200':
          description: succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/out-word'
            application/xml:
              schema:
                $ref: '#/components/schemas/out-word'
        '400':
          description: Invalid word supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
            application/xml:
              schema:
                $ref: '#/components/schemas/400'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
            application/xml:
              schema:
                $ref: '#/components/schemas/404'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
            application/xml:
              schema:
                $ref: '#/components/schemas/405'
      x-codegen-request-body-name: word
  /words/{id}:
    put:
      tags:
        - word
      summary: Update word
      description: Update word
      parameters:
        - name: id
          in: path
          required: true
          schema: {}
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/in-word'
        required: true
      responses:
        '200':
          description: succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/out-word'
            application/xml:
              schema:
                $ref: '#/components/schemas/out-word'
        '400':
          description: Invalid word supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
            application/xml:
              schema:
                $ref: '#/components/schemas/400'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
            application/xml:
              schema:
                $ref: '#/components/schemas/404'
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/405'
            application/xml:
              schema:
                $ref: '#/components/schemas/405'
      x-codegen-request-body-name: word
components:
  schemas:
    '400':
      type: object
      properties:
        id:
          type: integer
          description: fail code
          format: int64
          example: 400
        message:
          type: string
          description: error message
          example: Wrong
      xml:
        name: fail
    '404':
      type: object
      properties:
        id:
          type: integer
          description: fail code
          format: int64
          example: 404
        message:
          type: string
          description: error message
          example: Error
      xml:
        name: fail
    '405':
      type: object
      properties:
        id:
          type: integer
          description: fail code
          format: int64
          example: 405
        message:
          type: string
          description: error message
          example: Error
      xml:
        name: fail
    out-word:
      type: object
      properties:
        id:
          type: integer
          format: int64
        word:
          type: string
        level:
          type: integer
          format: int32
        language:
          type: string
          enum:
            - Türkçe
            - İngilizce
      xml:
        name: Word
    in-word:
      type: object
      properties:
        word:
          type: string
        level:
          type: integer
          format: int32
        language:
          type: string
          enum:
            - Türkçe
            - İngilizce
      xml:
        name: Word
